# Check out https://docs.codemagic.io/getting-started/building-an-ionic-app/ for more information
# Please review and update values in curly braces
# Remove or comment out the workflows you don't require

workflows:
    # Ionic Capacitor dev workflows
    ionic-capacitor-ios-app-dev:
        name: Ionic Capacitor iOS App Dev
        environment:
            vars:
                XCODE_WORKSPACE: "ios/App/App.xcworkspace" # <- 'App' is the default workspace name for Capacitor projects
                XCODE_SCHEME: "App" # <- 'App' is the default Scheme name for Capacitor projects
                APP_STORE_CONNECT_ISSUER_ID: 0a86aa66-a24d-46fb-84cd-2d8e2dab75cf
                APP_STORE_CONNECT_KEY_IDENTIFIER: GTHYTH32MP
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZyQ0VGOENXSjVQU09fcTRsc2hVMS1rMHp4S1VERXNYVnQ2R0UzU2tldFRNRFIxRzVGeEQ3X0VzbUxsd0ZNdWpGMDhvenczVFNDbGJmbWRsZHVkS0dLNERxemlmMl9LeXJWZ1p0eGpGaE9yWU13YUFaWlJhWHR3N2VTdnZfQ1dheFlZWEhWLWhCNDJpSl9XQzlNcThYWjE4b05DdElvMlVmR2gwM094VFZzMkRfbDQ1LU1POG1fcV9udnEwTUcxU2p1OUNRbjkxa2MzcG9zRVdJUkExc1NqRFFyTzU4RXFEVlhuaEZHQTUzTGxNOUJfX1NBbWU5NkZreUFuUWcyei1XWnp2ei1aTGVPczZQWjg2dFM2WTN1YmVRMmxhVnVndlZNT0hrUlM5aHRhM2dSZHVlclAzQnJuaDc4aDljUTYtTDM3cVJtR202MjdOcTdYV2ZnNmxOWVEzc0R3MEpVbTQzOTZianp6Vmxna2poTGE0UHduVDltOFZvWVU4MExybEpDallScFZPRXdaWmJHMXY5VUpyMnVhekFqQ19uUHBsRXpFQWdxNG5uaGJvX0FXTUpiVEpuU1MtYXdPR0NudFBQRDQ3TjBoVFZjVm5qZWZTd3VqRjV1N2xwR3VaZ1RvUGJMTk1QWU04VWpGTE9acUg2eUtYb0xQbTBQZkFLWTg5RDB0Q1VPOTRvODlaSE1rTXIwQm01Q3l5Z3hnPT0=)
                CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZyREVfNlZwNnJtb1VrMFhSb0pSS3MwVHhmRUpqTzRSeDlGQTctUVN6dHZPU1Zwc0NOY1ltWXhtZWpUSnEyRUZmMEhlcGlPdmZlNjBYQVhjSVc2N05PLW1SOTI4alpWa0loeHNhM0MzYjJVOXR4aURRRi1VVjV0ZGpyTHVGbFZIbFJnaFhkM2FHdGhpNUJJNXVuZ1MxdEw2emZtaWNUZmRXTmhXQ2ljaURvZDcxekI4aEh1TEFZcXBvN2licTA4cUxVODQxRHZYQlhFRV8tQ0o3M1BsampjUGpRUnNSQUVTQkxCeWJ0ODhkaHhjSTZtYVdrclFELXZXQ3lEejJwRENwdnVTSm9yZDd0T3FGU1k1NE1lM0V6TjZOWVFsc2VHTTk3MHF6WWNOeF9Zd2hVZlpzdktaN2ZHQ1dKTHBKQi1QdTI4Rld1MEg2dzE1Y0lOQUZEem9fYTJtb0R1RUNKOXV3TVVHaVFDZ3lNRktMYi1hbXhzMXkxMUZ0SkJZdl9GS01qUEx2Y1pqeFBianNEa2YyYnNLQXhLWXZMRmNTV253TjF2ejV0ajFVajBzTHlxYjdHb0ZRMWVkV1dyY3huN2ZreEQ2TmJiZmJ4VGdheE5JM1BoZEh3SlF4WHEtM0p5dEFCYjYxbzJ3TXBwel9CLW9wTklLSE1aQm1QTTVnZ0k4QWF3dDV2allxTEM5elBnQlRvQUZmc3ZZQ1dDeHVmSi1hd0xTd1pjRHBCMkMxYk93SmM0LXMxVDIxMUtMZGl1ejVrQ05tVk8zWmJCcDlCM1c4ZDh1SE9qQlVoQWxJX0drNGx3Ym1BQXJ0SXdCem5fQXNKNmMyQnRRZC1YQnVyQlc2ZGJpeF9GQU9JZGhFTEpwN0wtUlBwZ2FRbEhTMExMMTZQMTlxODQwQjFzeTUyaEhkcGc2Rkc2VTgxMUJKZkk4TGZZSG9hUnRwbXBBci02TGhISGtPclZvYTRJalVjSUt3OHpKQUhyMFY3YjBFR1ZOY1VoNXJFUHBfQXlMQ2tBUnRabGpyR2dycTh1RmZVak1feGhVb0hUS3RQRUlxaFl3WXpWb1daY2c3MG5iTzVtU050QjludVA3eXJySUlQcEhId1JjQVBxUUFjUGhrQWpsZEIta2JxYnJhVExFemxLRnlNd1BKc0ZMdjJJSDJKVlFaRlVVVTRQdkhsTzdhSGtycEh2V290cWRIczJGUUdYTHp0d2Q3Qmh1V2ZBSmhjQUJ0RXpDQWlLUEJtcklOUUJzNWdhaUd1THo2cnIyelM3a2lfa1BIdHRVSUxSQUMzMXlzbHdmdTV4X2Y4U2JHbFVQZS01eFpIOTBNeEhHa0dZLU93cGZRRlozOE9qWS1uSEN2WnhtbFhhd0EydUtmUlp5Vm9INlpTcFZyUGlILVpvY1NjYXg5RlBBc2ZscWcwZ0JRN3VMZ0h1amZvWm96QmpJOTRFb3I1Yy00UEVoZ2RoazRTWnMtZGZVTFZtT2lpTFhQamhEVGR2TlRwV2QyR2JuemVERkN3VWRqWloyNjlsSjQ0b3N6SU1kbXlQdVNpN0lXdzF6X1J2dFZvYWxOc0QyVHVYYUtEZXRSUEtnUDVtTUJPZnBWNkpqenlxYXlMWUJaYWJ1YVc1Y09hcU0ybFJXSVpveUFVTXQ1Uk1ObElpMjNMMFFkRHdFRUR3amlyOXFHRWExMXNTOW5wLXNOWXoySGxDaG5rZklrb0xMZmRoXzAtQ1lhcnVjRnJJQUQzQkpoUWxuT0pjVEl2TUFKSW5kQWg2eDB6cWhfYkxUMnFoLVdQamVMdk9XODBDcFdfZVE5MVcxMUFXblNnOWVwekdQU0dyaUNMcTYyUnE4aXJYSDJGTHFpMUwtXzM4QW11Q2NPSjNvcHJfYmZyLUZsM0lJbGlOYVZYckN5VGhtSi10YllJd3FxMkVGSFNFZ1FCLVlZZnJ4ckN2a0xjRHFYT084YVJTNmI3Qjl0bWZoN0pXMU1FZ0x6VGZrb3B1YzVmUFF6dTNEMWtJZE9ROGhEeWhtN29tTzFzNXVKUUN0ejFVdlE2emRHdUxNbXR0cTdraEgzT1ozVm94c1lCb1ZhVXhsTzBUdVlOVmIyYV9aOVVHcEVnNVVVMkVFeTBRc3FEakxONXRENFRFS1pEM1IxVkdkQ1JCN3lPeURLRTVMUUx3dkFRQl9MSmo1VG16bFRMcG5BNTF6azNBdG10ZVg2V2QyWktQeW82T2VrN2EtUVo0ZXhtSVFCdzM0cWNpeDhINlIxWXJYb19MNDhleG9WNk9DN3U2SHpQT19ZSjBaVTRlUENJWkcyWmtkQ1hpNmxUckVmYm0yZFl6X3U0TEVrTS04SDJVWUVvU1BJYkhEeGVrMUxSWTc0enRBa3ZhWVRIdWFXaldIWEREYlVOVHhIYTNpaDQ4U1VieWJmV2liRWlpNFFYM3pWOGZjTmZHLU1OVzEyd3BqRmxJcGsyOEF1Mzg3WXFzNWhIbTNKWVEwRFZ5dXE3ck9xQ0Y5ejlUdTFHVzFfYzY3dWdYZ0M2VlN5VHdWaTBKTFQ4eVZDRl9GQ0pBVDFPTVNuZFFVNXJGQ25jMms0TjBiZkN0UEw0OV9YdHd1V2U3ZWFNaWFEYkl3aFlJYkptb3RfVlBIVEJCRVhkMEFzbWlremt2dlBVYnprZ1lteC1VWnowWDRGQzlNTkFkMk9KT0w5UWctcXlxeGdRRkU3czhtUlJib0ZLQ3JJVVkxUnFDei16eU9NZ21BQndsOUdyN0NGUnhnVXFycDB5Rmg2QjNJVDBlYlhJOWl0aHl3Z3Z1a29UNWRqalRlWWt3WkxkNGRsTW9UNFltZlBLVkVyZ1o0TElJdGM0TkZMOGZPYjB1cGdTa2t0RVp6UEtsbDlJNjlNSEZnZGtsTWI4N2lJeGVQUW9RdExkRzNldFVBdmRWbVU0U0lad3dMZ05aN3NCMGZWQTE4SmJ2ZmNDc1ZOdGNoWDdyV3hnNFlVbTVHck9FZXRkRnRNWlMwU3NjaVV3dXhjSDhfdXFENE1KandDZ3pvVnpFVzZwenBwaHc2Qi1vZGY4bzNpcU9tYzI4czE0UWhYYVAwTXhWSGMwRDg3WUNUU0E1UkhwUjY0ZW01Z05halFCNkN1Q2F5WDhBWHFfVXEwT2VWRWtzSFNOcGZhcEhnc2VXdnU0bWNhbUZFSGI3dGE2Mk5pMHpxY3pxaEJ4cDNoYnQzdkttTHptLTdVWi1LMmZ0VGhQQU53N1VRYnZsR2xqcXZUTXlIMkZxd3hOaEgtWThYeWltTGhsenpkY2FiYk5TVVRzQmk5V0RVYnh5aUZ0aVdwLUJMNmthUDVJa3pCeHhsMmNaS2p5eURjbjR5SW9HXzZsYThRTjdtSmk2OTZpYjlXa3RMQ3pMcXlRb3B0SlMzbE0yM3B5YTRhZm0zaEplaDBiNnVGWlVNMzc1OVQ1SXI0dFlHMDFUcEQxLVloY3BtUGxKdHI2LVNLY2Q3WXA0eWFvaURtLVJRR1FiWXNaUVloOER5QXlYME9sd2tUUVdyd0lEakl2azFRTXNaOWVJU0UzQW9BclZXTHZ0czBYanYwZVZfZldCVnk3amlFV3JEelZwQ0owRlhlcG9Ed0lrb2R4ajE0MmVmdmowOG5xRW1ydkt2NlVRcl9CUXF3eHdKSTZLcUl6eEZjNUp5VlVBc0o2ekNmS1NYSkVqVGpGVE1OX2U0Wi1ZTm5KUGdIVy1ZUjhfNnFjZE8xMTAzYk11dUV4dG12WnE0UGExMXBySllyZ1FfTXFLLUpudTNZSzlqY2tVZUppTGYydHQ4bldYakZrVlRFblNJaER4dVFsck5xWi12MVZYbVNmWXZCUDFvclhJY0hqaHgtVkJncjFDNzhueHV6QWF2RmN0cDlLLUtMak5Mb2Q5dzA1anp3SVhhTVlUdXFjcHl4WGxqd0l4LS1LUzdueXFOb1VKVmxzeDlRVmFLOFFRNnZ1OTBWMmRFT05YZG5mMzB6RlczdFp5S28tZGFua1MwcnVMSnFfZkd5aXV4VzFlV2toNmtDRllBcmQyV3NUT1k4c1k3aWdWLVFZX19YTUl4T1BGWVRrX2JHWjVUN0RaN3ZabXpUSXBNOGNNUU96cDJueVk1ZFppUDlXdnFLbjZOSXZWZFE0SkwtZjRvMnMzTFNQNjFWc2VRQmlSeUo2U21NajlJOVZiUkhJT0lRZ1pDYnJib3BjQWJ0dFVLT3pIMTN5Y0F4Rm9Hb0lWUl83ZUN4WnBoeHplNG9jcjJrOVpSUzVSZ2NpbEpvYUhNV0w0ZVMzOFhCeEtnN1N6dmZlSE1CaVJpTjE0RURDTWFHQTR1dmxsQkZJckduS2pQYjhPWFRfakIxVXEyT2VnZ0QwVC1ieFBWSWJfaU1rNUg0MEp1Mk1GZTRsUFl6YUxRenZXbXpON1NjT0RHNEhpUzJGWFRUTlRaTUFNbWtPNU1kSTlSWDhrOURQUXlXc2xQck5ZUGJXajUxdVgxb256blRSTko3UHlwUUNzNTRYeUdKOGp1MFJhODRtSWExYVQ0aE00RGEwaE9Mb3dQRENLZkMwb3YwY3JUREdPTmNsWUphMWFJRUlOWHU4RlBvd3FMMDhDbXlRVG91ZjNvcDQyYTNKaWxHMHhYSEtEMGdDdENCYXFhdGktQUp5VjVDMGVQdXM3b2FoTk8wOXdZWTlCVk9BVGt1MDRBaUhyY0ZzUF9BNWRveTVXM2I4akExX2xsSXE4bExKZVhwQ1piOERDVnYtcjVKdzRnNXFtYlRZcUZQVVE3cTllT2RPeUxTSUFfczVEdHFndGNRZGFuc0M3aGFtUWV2b1pVVTZFRU4yWnU0bFE3NnVfbnNLYkViUXZiS0Mya2NMcjJxR2xhWVJJWFdDM21HN0QzbUpydzM2Q0toSGtWWG9LS0hSbGhkVUZKeFNjR0ltZmdhNjJ1dkxyX3AtcGhJRUZ1YTlSd1I0Ry03LWtaZk9BVGtjeVBSN0lVY1pqbzhMMnF0WHVLZmQwbDNsUkdqWjlWSm9iRFJtUE5LRDNnWGFsTjB1MXc5VVdKanowOUMyM1VzZENOOHJjSEtuVVVGcVpuc01oMUduZmFVY0VuekdIUENQY1FFd3VmcVN6UDRJM3BZVzBKYlVzRi1Za2g1dGcyYk4wXzNNZUFLOFF4UlhzUTdTcGVndXI3UXpReXRsSDhRSnp0dXVMTWduWUFENnZtbG16SmJPY0ZNR2l1bGNaZGJaQV9SY05idVQxTWJaMjZqNXZKeVo4WGlFN3lBX281TXdlM09EVjNzU0tlVV8yRUhZTXh6dkhNUzJrWDhrMG91S2g1ZW9aaW8xdE9rMjBKbEdPck1iY0QtZlI5M0QyS3BWMFgzeVBEODRVcHB6LTY5djJvUTVGNFo5Q3pmOU1zQ3RpZlFRTTJJSkNaUWNjRXhsSjhfbEtveHpTbjVaUFJDQ21DekdVNzNXRHhuTG5jTUFqLUUzd3g3bjdlVTNPaVRjZDBWTENfQ3o1ZURVa0RsZEFmTUVjcXVpWTFKRFdvRFNRS2FFVDFuUlNzX0g3WGJvN1ZpdEEyTUhlLTF0UmFsS3BDbWtCRE9OUVA0MXhkeVUtVEYtWjdJTk5BYk9tOFNMSGhuaS1hWkZGQWQ2a2toclJ3TXdGcFNQUDhQWV9XRV92QXlONFdySjRHS1hkVGpfSk5CaGVtRkRQdkdBR0lMNVMyRzYyZ1VzS3BsaWRNSFF2RXdSQU9uOHNXejlrTTZGMXNkdG9mcmxVUU5uNXNKalZHaHdIMVFtV3FHSE5vUXdhbUpIVG9UQ1RKa3NremFuWGlNdUticnA5T0hVYmZvUUpDVlVDSWI2bWYzYXRIWllIdGpXNUtZcjQ2ZkN3NjMtdXlpZnQ5bERKc0xWa2tZd2hEVEpDR3dXd1VKVjZkM3RmNEpEQUR0VDZhSFNBUkVtMUhQc0Z5M0xtY1pScEo2TFBteTFLdWFWSXZOb1NNNml5Y21QMkNYc0dELXNXMzFYQ3ltZW5aUGY0M0p2aGtkYko1YUNqQkdzZzhnaHV0UGJSaFA5Z0NqdXBVNU5PeS1ERlBlT29mZFVOVFBwY3BRMU1PZWY4M2hLaFh1bEs4cTlDSkJVSTlfTlhVOXhCdUNTTUhwaFI2UktjWW5oV1ZLd2pmb3lUYXBIQUdOVkI5aVhiQVB0VDlXN1BDLUxTTW9ob1lYX1dMdGk1RDhuRVJPSDN3ZVBGTlJsVFFxVHluVW44QW5Kd1lQaFhZNk56WDJYMkI5X2tPeVRVenBibjFXUnd5V1B4MlJPWUF4N0d0NjhDckJHUzZHV01CU2o4OE9rM2g3b3BXZFJMbG95OWV6SkhHaFdzWDNzU3hTQzBGZm1Pa0JaQl84YU5OSUZpZ1Z4ZmxjM2dwZmw2M0dja2RZZ2tRbVZ5cnpIeWNGLUtIWEoxUGRoYS1RSXc4TVRHZmo4a0Q0MUpvVmdQUG9DRkN6ZHQwNVF4MzZHN3dGVlhIMUdPTS15V3NYdFRNS1ZpVU9XVV9ZcWVkUFVsREd6RkVXOFJQVlZzOUM2TGN2Sm03RGR3SXhIN2pmM3VHWk1UVHFCck5yN3l4WlRrMExrR09IN29BMm9iRXQ5MnoybUpXSnpDbW1hMDhPZ3hZOEV0NUJZX0J4WkNuUjkyQ3FuWEM2QV90YXY4RUFCc21Od24yRjNPWU5xci0xQnNReGxUdF8tT0plQlM5S2lod3dZTWxCNlNOVFdFWTZsMFRlb1A5N1Y4TGNic0J0NDNLSHg0bS0wdVhpdG0zY0FGVmhpakRoUDAzeFVYV2NvdktKYnZZcHVlRzYtSU00WWNtV3dpQ0llOVdSblZseFVVWk84Y1VnckpSRnBvR0thX3IyeFRMXzRnUlNfWjVFSUJnZWRsVFlhV09ISTJXVUpGOEkwUC1WcWJlRXBvVW5MSVlIQlpKRTdpbDRMMzNTd0l6aEdaQ1F2dGpFZWFHLWJuRzhiYTZHWlE0ektxNlAyY3FHLWNNLXFpMW1Jak1SVG50QWJjRlpaNzBVNURkVE9xUHBCbW9adWs3T0N6czY1M1RBN3NCM3FOYVN5cmw2Rlp5Rng2NFhHblVQTjBZREhCWE5DYmgtd3BkR1pUcGp0U0RiUm5qRnZCbjBRb0JMZ1ZkY01oc0RDUVVDdzJYcFdJZVA2QTBNN296cVktNnVUaDd3THg2eHZlMDFkd3ZzdmFRUWpJN2dJOU9PWW12OXNETlpsUWNkNWM4ZjhIYVRyY0t0VXRYTkNhSEhiVmlEc1Q0ZVhic202SW9pNF9hVlRHU1UteVNIMlBtUXAwdWpyRmJuYVdSSDRtZzBIajNBZjIxNl85OVNjMEp5eGhVRElYZDdHaGFoZmlTX19lZlNXUXFjY0x5eUlxejdrZEpTemgxOWx2dTI4SnNTU1I0VVdBT1paSHVaNGpMZzZldmdxcFVhY2UwWGRYcG5kSnptY1N5QndhRkREQ2pGUlJ3a2pxalczeTFiLUJvc2dwZjdwY3BxY3d3Y0dNWmhGd3RNRk9wV3AwVUQ3dmV5bTFPZVk3NF9ySTlLVi02aUxma3ZOWXNkeDJuRUo3MFFWcTdoSGtQdkNEc25sRUcwV1RPSmR0MC1zZl9rQzlpTXlxOXhUZ3pRbXpqNEItcEtxOEtyT1VVNU9XUGphd0luX0FXM3d1Rjd6UDlGUEYzbmpiaWJXX0x1dk9JVklBUG93LWROcjJCLWYwNVR5bnlkRVVTZXdCOFN0XzdfX3YtemFxUEt3R3hlMGp0cw==)
                GOOGLE_SERVICE_INFO_DEV: Encrypted(Z0FBQUFBQmZyQUh5VTRpb2I0ZlotUy0tdnJKZzBZY1VnY19QN3IzYW1MbEtDdUExdFc1OVZRMlNxb0ZZNHllWFFSbnZ6czZLMUZYNllPYXFoQ3haODFWWVd5TEN4ZFlxekZNNUk1ZmhoNHY3RVItUHNmVzdjNGxmdXBIYmdxSDM1aTJKa3N6cUIxQ2JWSkFtcFpTLTVoc1NnN0JlTFY4TFBQY2hhX1R4UHd4Z2hKdS12MjhVSTBObjhIaXZqWEhxVnZPRDhlbk1wS2EzZmhCck1qd0g2Z2tHQnhnZVhucWpHa0t4M2FsOUI3Y0t3dzFXQlVfLUxZcDNyWEdwSzU0V18zakVDeGhRWFZaMW9QZ0lzaEhSczhWanU1MURDR0N2dXk4QVpTaXR1OTZlZjA3eE01Rnl3bE1rVmFTR3h4SXJTc3NLaExocmVIVnVIekdla19tTUQzMU9PYXBDaXB0YU1WcU94MU9CQXJyVkNjLURSZEozZUlGQnZ0MVFQdjFWUnlweGJKRWdXa3hTRFNzZkxBbnRraklpMVh0dHY3STdKWUJTbjVRNmVISko4cEFkaE1TNjlUYlhtcHhjVXc1N3lDanNzTXM5Y2Yxa01jdkpHdmdab3ZPU1dPdGJQd1pLcVhNc2lUOWROd192UUhxSTBKX1hRUTdweV9zcHFtZUx2azFIMzVDN0JaNG1tb0NJUVhOTjhDaWVPVzUtREJnY3BMM1FCeWpYal9jZzdKN3JRR0dIU05yQ0RmeHkxeWlxTWVzaGJ4REpYUVZoSXhXTU4tY1lvU1BZS1Q1TTJ6RGN5TENyaEt5LUtibldmUDlJc3VEcHA5Q0Z1b3h3cTFSMWZKTl8yMm5FT0ZvajJVbG0tZzlkdDFvR2gyaWMwQ0RLT2NTTldTeU5pejl6NVVMaTk1OVNlY2pWVUtMT1hPT3lyQTUzOHhPU08xdDhZd3BRRExEb3NlaXpZcmdHS1dLZHlvMk85OVBLdXpBRVdLVnktRVdnM0pCVURhc0lZUUhEeWVMeGpSbEZkc2dla1hSOUY4TTBScEtNMVRRcHFsSlA2dlJWVGM0SFd0cTVIcWdHZkVOblhFQm5ub2lGUTJ6MFhMSU5yanNlM1pDa1p5a0JNVHFuZHFQZzA2eW93WVFQNHJET2hsNWZzbHRZeVFCZEpidGJHV3loQlVhTXZQTnRzNHlWWlc4bVdFWlZpUmlRRkFBbzRBcFI4SnVadGVHejdkQVFhRGdUTzBiTXN5LXZnTjFYcUxoZncyanVSVE5VaExydXdYVmtvck4wWXBFYTdXZ21MTE5iWnhVOVZoMVpuaTR0TDNhb0JVU040N1Z4SkFTd2Q3cHNCR2NsWHpZWVFQRXBpZVBKanJXU2F5c1RLWWVqdDRLQXhVQXhSTThycndSQk5XdVNMUVBvVmhpRzgyZkVkYkFlSXlHYk5XeW5FMGJIeFlfR1BLakxKZWJRUmRnYzlON1RmS3dkRVFHaThYT2pnOWZVc0VsckdpWEpTek5kYlg0c09nNlZpWUt5MVc0dXdQWkRlSURMYk5VRFV2MWJMUnFyVWZBd2J4MHhqeHkyQThnZTRNV0YtcE5ROV9SZmhrZHRVOGpCX3RxdUw2TTA4ajhLekY2Y3VSX0pjWnVBLVBBc05fNXdsS0YzY0g3SDN6OWRhOUEzNjA4dFdlNkdhSEw0V3VwSVczNDVjSUd3WVhONG5RZndlY2dEZTJYeW82VDhrRFR6cjBsbHF3Sl9fVjJfQWhwejU0eHRwWHFkTXlfd2w0SVREbGhqV041TE5vVG1fc0JkNHk2ZjVQTm1tc2JCWHlza3g0MWh3R3hmeURKMEl5T3RmZXgzRDhaRVg5OHkxMEgyaWJMUWl3MmdiWEtVYzVZNlJtSFA0Z19hNXczdFBDTFprckJmcURlUlhYRFNkZmdON1pDcTVoUmdoY2JRM3R3Q1VOUUN1LUZ1SVl2QWpwYnhxbXBFLW8wTU96aG16NHMxN2hyZkQwQ1V3UVZMbWRleVBqN2h2SmJWS1ltNFNHSFNWeHRkNWg2ZGNMaFdoZmtXbVlEVU0xNWRBdmhuVGNoRWpRVDYwTGp0bV82VXFNb00tamMxTmtqaTRIeXVLa0wyamhsMXB3MmxyWUVWTllsUlVWcllmQldmWVk1N0lGYXhhRkhqaW9XazZBU1pqMEl4ZXBlSjM0Y0xZQThOSnpybGxQQlRHa3FTdlFQcjlFSjc2bVZqcHhoMEdTYWVoNVF2X3IyR2FLd3RNOU9Sbm5iaERXazBmYmpTT0lpcG9hMGoxSHhqOXpDWkg3RmZRMlVGV05wZ0h2T1Q1dkNYMmI1QUtPWi1xczFKVHlCY3JQS3FQR3NYNkdkeGpsSkQ5RG55MlN4M1Jzc0lpY3NBY3Q2aDJCN3lUWEVHMUxuYjhTTnh5VWZpTnVKZ2VUUkRrNFNQZEFqU3pjTGZMYkR0RVB6Z2NrWGVXeUEyVWtabHFQdV9BNXZ2bmN5SVJVRWt6S2Y2MXZIWEgwVkpoRTFPZmlmWE16SHhjVko0eC1admJuc3lTNDJDbkhJZHozdUlsdnIxX2VKUDU1THlUNjEwQ2lpTHJkVEM0cWJ0azVPZEZTM252ZU05ZWRWVm1KMllPS3F1dGhVNDJMaXZCcURqNHpWRmVXYkhYZmFBNE1STjRBbVFZRThWUVBzUFVkbUNoSURtMjNGNzZxZHdwbXZyTVRmcnpzUS1KMnZUTnVTZloxYWEyX2tYSEpiaERlYVVGN1huQUFvLVpYekhjMW9JYzBXb1pjdk1jakNtdHJoR3VFNmIwSGNWd3R1MEhQSFNmck1rczkzNkxKa0M1R2lhTHlpcUxuY0tDeHA1RzlQZ2J5OTk3a21Lajg5TVNZODV1eDREWG1LOG5NZEUzbERUVU01TUNpVmk0c2VWTGRjVkNNNWpUVWFfWlc5UG1VejFKLURydjAwelhocVRFdjg9)
            node: 12.19.0
        scripts:
            - npm install
            - npm run build     
            - npx cap sync
            - echo ${GOOGLE_SERVICE_INFO_DEV} | base64 --decode > $FCI_BUILD_DIR/ios/App/App/GoogleService-Info.plist
            - |
                # build iOS
                cd platforms/ios
                pod install
                keychain initialize
                app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
                keychain add-certificates
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios/App
                agvtool new-version -all $(($BUILD_NUMBER +1))  
                xcode-project use-profiles
                xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
            app_store_connect:
                apple_id: shane.earley10@gmail.com # <- put your Apple Id here
                password: Encrypted(Z0FBQUFBQmZyQjlpcnpnSFd5cjA5ZkIwSkNTN2ZCNXRXcnowOUJPc05kajBabUF0aU1BLUVMbE1tSjlhclhpcU9QVUlSaXdOZjg0Y2dlMTNaUHFuOGZfWVA3Q1dITzNsaXhxa2NtVDBVZG02ZGtYWHN2MzFNUkU9)
            email:
                recipients:
                    - shane.earley10@gmail.com
                notify:
                    success: true     # To not receive a notification when a build succeeds
                    failure: true     # To not receive a notification when a build fails  
    ionic-capacitor-android-app-dev:
        name: Ionic Capacitor Android App Dev
        environment:
            vars:
                GOOGLE_SERVICES_DEV: Encrypted(Z0FBQUFBQmZyQUpRRUpKYVItNHFwandJaVVydkJvZ2E1anpqRWVHWnNCODlLNzE4bkRndENXTl9YWWNPVThMazlSTEQ0ZDBUYkNGbGhvbnYxVzZQa3ZkWndCTzhDdUZJem1vbDBHc21KdDYzMXgwRW9vVkt5Y3RqU3R4bm8wMUpQVEFMaGp0N3I4UnVLbGZDeUMxUVJ5bURsS011a2pNS3pMakktbk02bGxBY096U2JLSHAzV2VpYndLTFFRZk9MMGZiWlFBalhSX1B3bE5HQkdJTkdwZGpsek9ZQXdxaVdjSXdGXzVsQjFpM0Q4Y3NtN0ZvR0RFTUFqcGhjN2NnSVBNVVcyN1JtVVZkN2FIZVdxZHpvLTQxdmZRZkVBeEVFQjY5WnNFSEYwTTJ1OEkya3o1WEpqLXdEa0F1Ti1YZ0hkaUY1cmpGQTlOZFR2RUdORHZ5aHROaVBtMk91ckR1QnFPQ0twYThBTHJiMHBFZFZ2WVR0WEVsa09Mc0czQmFacUV6aEktaVdJX1l4ZUtRNklCS0lER3d4RXhjdTdPZVdkT1BpTXgwLUhzeDIyQkFmRWtqdzF2cWpVMENvSUFiNmtmZEhScHpRMnNGZUZxbFBoS1c1RFJYN0NvdkVwelIycHoyX0puSnFQeEJBTUN3STdmU0NOSEdtSDFWV3o4NUhKb19aSlJtV0ZmeFZNZWlsYmJPQXlBWWhRVTctaHJ4M196c3I3MmFCeXMxYzI4ZDJqNDJfYVRLR0FhQW5KTDNQZm1CRzRvY0tnU0RIdEFQLVhabGExRDdiVGRPQmhpOFdSaXJkTDZjN0ZqWHFIV3o0eXJ6M3gzUExadnhuWGg0T2JZWDJTc09jeEViZm12TGdtOW5IRXVBbFpCa3dNX3l1MHduRzJoYnNoRmVVd0NjTXdMNU81dklZajV1cjQyM3oyZzJxbF9keFp3VnVHVjJ2YllKalo1djdGSFkybFB0Qm9TQ2N6d2ZwSmc1ZjNaeGhXYW5KYlE3VGlfRTBUNzBNVTVMWUZUYWZLUFlXaXdyVmx1UzZKVDNycXBwLTltV2xIOFZqcjJqZVA0ZVlXd1AyRnVyLWpTVjZQaTgyeGk5aVkyOXhtZnpWUkx1VlJqVTctUHRnb29vQVQ5anhGcnBGaUFXWmdFTENvaVRKb1JQNTdxdHFhN2JIY2U1aUhzeXAtc3o2NWFZd0tabUI1SUl1T0xhZnVYNFdNcWdIT2dscC1ud3VhNk5nWTV2bjU2OXZJR1ltTzZWZWVaUXJnV3Z4cG5zSTZ1X0s2UzFXS0VpTmRxLTlkV0l2Qkd0d0FkWHdSdVdJbFFGbzFPVUl1OG5SWmtSQlFJelB6OXNuS0NKbHN2Sl81V1Z4YlVyVjNYRVR2VDJpVlNUVlU0ZVlKZ0dmcTBVRlZyeGRhMHBjak9Oc05ETGVFYUJkYmt6QjVhV2M2bjhzd2k2V2MyTkFOWUlwb29jQVFpVmJTa05lenBhTWo3ZnpjZkY3WDdLbksyOGFyWW1IQV82QzlhaENSS1VSZjk3SVBocElUYzRranBLekZFWHFuZXZyekZ5eW1saEQ4OWpKc2NkeUtaMnpUY1VmZW1Ra29TT18wWmFKQVdvVXFTZVlld1BGUzMwUzUyZkowdGZJQWV0aS1qT3NOS3FZc1FYb1dMZW5CMjB3QkYzT29kbkZDUV9OWEdVRDR5U3dPV2hReHpnaWtHMC15TzdjdVlkRjRETVhFSWVPMUhReVotQXQ4OWlNbk0yb2ZuQTQ5a3F6ZFNiSnNjSnp5Mzd3MDc1anRfRDNOR3pBNEp4Z0FmMGM3TzI2RFJpR0FfQnRzRGpIYThtSW9iYlZudE9rQkNzU0RSd2JqWnU2aHRNOXpvOF9oMVUzMzNyYXJHWnhfc0lQZlY0WEpJc1o5blU0Q2owZTNiVWJ0VFlrY1FWWGNvR0RzNjlWRnFQbUtuYVRrWTlwSmV1Qzg5UUNWQXZ2OFBiNi1zT2lwSS0yQ1VfUlVkSDg4UnlNS2hiTmVvS2tyT2VqX1NhdG5uLVhLV05wUUwxeUU2NWtGS3FxRVY1XzY3aENEOGVIdGZ4YXVybWppNnNLVUxuR3piMjJwMGx4bnpONG5nRlpsY3dJUmloTEJyY0hoaXIxNFBGYnZockk5Y01QdHJmM2thTkJVM0ZFQzBQQUUxRmhFQ0MtUDlzZ0IycXpJdV9DcFhHd0FGUEZ3aFQxdnY0QVdvdXFndHhqVDAyYmJqbUFudEFYT0ppb0NReHpKNmMwU1djbm5meW8tM2JES1lFd1hYSHQ2QmpXZkE5ZW8wMURkcGc0cEtSNGZmaFJ3dzZVYnZWXzhHZjJFS2dIbHVneHJjOVJ4NHpZRmw1T2xMWDlhS09RdENGcndQTUxOd0pNV2dTaFlLZmR0T09rajhFQi1fMFBiQUVhQ1lyNW94NHlwcGpEZHh3Z1ljQUdnZzNlci16SjFSc2lsS0lGU1drRWZLUXA4cW9RWk5HS09nVkNUMk81bnJ1VEgzVEk2VGxBVWtKa1NCTVhoMVNxakR0a1ZoUlpReS10R1JLWFFzenctZVJkRlQ4cDE3dTJTc0pCN0VqUzNRMk1jT19UZGtlLXJjaDhCTEhxNnpwRUtjdWZxSDRveHl3R1lvNFo5VEczcGRGbFdDR3RpUk90YTJZTVctRTdqdE9Ob0taOW9Kem1MTkJUQm85SUlLRHYxMHh5VzlCMEt5dlFOb3hIaGVEXzRGUXJfOUd0Q3UyUXJfdGdQcnNwU2Y1d1d2QW9KdjRoamZ6VTROM2RMal8waHJRRE5QMUxKSXZydGNDVVg3Q1JYSTRLLXJseXEycDJhYXJSMDU1UnYtTkZXN0V4R3I1ZU9MRjBhZEdiWmNvRmEwV2xUNEdoQzNZeFdQbnFyNm56bnUyZnFrSWkzeHdsM0JkVC1obHpSYzFEVllfQXhqZFJlVnFfa1pXT1dFZmVaQWJwUk40SnpMTWNfRTBlY3MzemRlS0ZDSWpkY3lmc0JDb1FPR2ZwdUJQWlpxVXRyZkZxQWZGNFM1bDZfT0ZycnhrMWlvTFc2MndmY2I4emhZSWhxUnNJaVNDbVJ6TDZzZHBRXzNwNlJIWmJLbTZUSjdiUnU3dHFjbUZvRjE5WFFLWEJJeVYtTkN5eUE5aFF4VzBaUmlIdGJobWFwTXBXZGt2dTZjTTZRNk92T3RuUXZZX0hjdzBnQ01PQ00teUF5a3VqTldCa1RBRjFSeFJHLUdyNmFYVTJkZU1LczJnWmlldTJGWnRrSGoyRFF3PT0=)
            node: 12.19.0
        scripts:
            - npm install
            - npm run build     
            - npx cap sync
            - echo ${GOOGLE_SERVICES_DEV} | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json 
            - |
                # build Android
                cd android
                ./gradlew assembleDebug
        artifacts:
            - android/app/build/outputs/**/*.apk

    # Ionic Capacitor prod workflows
    ionic-capacitor-ios-app-prod:
        name: Ionic Capacitor iOS App Prod
        environment:
            vars:
                XCODE_WORKSPACE: "ios/App/App.xcworkspace" # <- 'App' is the default workspace name for Capacitor projects
                XCODE_SCHEME: "App" # <- 'App' is the default Scheme name for Capacitor projects
                APP_STORE_CONNECT_ISSUER_ID: 0a86aa66-a24d-46fb-84cd-2d8e2dab75cf
                APP_STORE_CONNECT_KEY_IDENTIFIER: GTHYTH32MP
                APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZyQ0VGOENXSjVQU09fcTRsc2hVMS1rMHp4S1VERXNYVnQ2R0UzU2tldFRNRFIxRzVGeEQ3X0VzbUxsd0ZNdWpGMDhvenczVFNDbGJmbWRsZHVkS0dLNERxemlmMl9LeXJWZ1p0eGpGaE9yWU13YUFaWlJhWHR3N2VTdnZfQ1dheFlZWEhWLWhCNDJpSl9XQzlNcThYWjE4b05DdElvMlVmR2gwM094VFZzMkRfbDQ1LU1POG1fcV9udnEwTUcxU2p1OUNRbjkxa2MzcG9zRVdJUkExc1NqRFFyTzU4RXFEVlhuaEZHQTUzTGxNOUJfX1NBbWU5NkZreUFuUWcyei1XWnp2ei1aTGVPczZQWjg2dFM2WTN1YmVRMmxhVnVndlZNT0hrUlM5aHRhM2dSZHVlclAzQnJuaDc4aDljUTYtTDM3cVJtR202MjdOcTdYV2ZnNmxOWVEzc0R3MEpVbTQzOTZianp6Vmxna2poTGE0UHduVDltOFZvWVU4MExybEpDallScFZPRXdaWmJHMXY5VUpyMnVhekFqQ19uUHBsRXpFQWdxNG5uaGJvX0FXTUpiVEpuU1MtYXdPR0NudFBQRDQ3TjBoVFZjVm5qZWZTd3VqRjV1N2xwR3VaZ1RvUGJMTk1QWU04VWpGTE9acUg2eUtYb0xQbTBQZkFLWTg5RDB0Q1VPOTRvODlaSE1rTXIwQm01Q3l5Z3hnPT0=)
                CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZyREVfNlZwNnJtb1VrMFhSb0pSS3MwVHhmRUpqTzRSeDlGQTctUVN6dHZPU1Zwc0NOY1ltWXhtZWpUSnEyRUZmMEhlcGlPdmZlNjBYQVhjSVc2N05PLW1SOTI4alpWa0loeHNhM0MzYjJVOXR4aURRRi1VVjV0ZGpyTHVGbFZIbFJnaFhkM2FHdGhpNUJJNXVuZ1MxdEw2emZtaWNUZmRXTmhXQ2ljaURvZDcxekI4aEh1TEFZcXBvN2licTA4cUxVODQxRHZYQlhFRV8tQ0o3M1BsampjUGpRUnNSQUVTQkxCeWJ0ODhkaHhjSTZtYVdrclFELXZXQ3lEejJwRENwdnVTSm9yZDd0T3FGU1k1NE1lM0V6TjZOWVFsc2VHTTk3MHF6WWNOeF9Zd2hVZlpzdktaN2ZHQ1dKTHBKQi1QdTI4Rld1MEg2dzE1Y0lOQUZEem9fYTJtb0R1RUNKOXV3TVVHaVFDZ3lNRktMYi1hbXhzMXkxMUZ0SkJZdl9GS01qUEx2Y1pqeFBianNEa2YyYnNLQXhLWXZMRmNTV253TjF2ejV0ajFVajBzTHlxYjdHb0ZRMWVkV1dyY3huN2ZreEQ2TmJiZmJ4VGdheE5JM1BoZEh3SlF4WHEtM0p5dEFCYjYxbzJ3TXBwel9CLW9wTklLSE1aQm1QTTVnZ0k4QWF3dDV2allxTEM5elBnQlRvQUZmc3ZZQ1dDeHVmSi1hd0xTd1pjRHBCMkMxYk93SmM0LXMxVDIxMUtMZGl1ejVrQ05tVk8zWmJCcDlCM1c4ZDh1SE9qQlVoQWxJX0drNGx3Ym1BQXJ0SXdCem5fQXNKNmMyQnRRZC1YQnVyQlc2ZGJpeF9GQU9JZGhFTEpwN0wtUlBwZ2FRbEhTMExMMTZQMTlxODQwQjFzeTUyaEhkcGc2Rkc2VTgxMUJKZkk4TGZZSG9hUnRwbXBBci02TGhISGtPclZvYTRJalVjSUt3OHpKQUhyMFY3YjBFR1ZOY1VoNXJFUHBfQXlMQ2tBUnRabGpyR2dycTh1RmZVak1feGhVb0hUS3RQRUlxaFl3WXpWb1daY2c3MG5iTzVtU050QjludVA3eXJySUlQcEhId1JjQVBxUUFjUGhrQWpsZEIta2JxYnJhVExFemxLRnlNd1BKc0ZMdjJJSDJKVlFaRlVVVTRQdkhsTzdhSGtycEh2V290cWRIczJGUUdYTHp0d2Q3Qmh1V2ZBSmhjQUJ0RXpDQWlLUEJtcklOUUJzNWdhaUd1THo2cnIyelM3a2lfa1BIdHRVSUxSQUMzMXlzbHdmdTV4X2Y4U2JHbFVQZS01eFpIOTBNeEhHa0dZLU93cGZRRlozOE9qWS1uSEN2WnhtbFhhd0EydUtmUlp5Vm9INlpTcFZyUGlILVpvY1NjYXg5RlBBc2ZscWcwZ0JRN3VMZ0h1amZvWm96QmpJOTRFb3I1Yy00UEVoZ2RoazRTWnMtZGZVTFZtT2lpTFhQamhEVGR2TlRwV2QyR2JuemVERkN3VWRqWloyNjlsSjQ0b3N6SU1kbXlQdVNpN0lXdzF6X1J2dFZvYWxOc0QyVHVYYUtEZXRSUEtnUDVtTUJPZnBWNkpqenlxYXlMWUJaYWJ1YVc1Y09hcU0ybFJXSVpveUFVTXQ1Uk1ObElpMjNMMFFkRHdFRUR3amlyOXFHRWExMXNTOW5wLXNOWXoySGxDaG5rZklrb0xMZmRoXzAtQ1lhcnVjRnJJQUQzQkpoUWxuT0pjVEl2TUFKSW5kQWg2eDB6cWhfYkxUMnFoLVdQamVMdk9XODBDcFdfZVE5MVcxMUFXblNnOWVwekdQU0dyaUNMcTYyUnE4aXJYSDJGTHFpMUwtXzM4QW11Q2NPSjNvcHJfYmZyLUZsM0lJbGlOYVZYckN5VGhtSi10YllJd3FxMkVGSFNFZ1FCLVlZZnJ4ckN2a0xjRHFYT084YVJTNmI3Qjl0bWZoN0pXMU1FZ0x6VGZrb3B1YzVmUFF6dTNEMWtJZE9ROGhEeWhtN29tTzFzNXVKUUN0ejFVdlE2emRHdUxNbXR0cTdraEgzT1ozVm94c1lCb1ZhVXhsTzBUdVlOVmIyYV9aOVVHcEVnNVVVMkVFeTBRc3FEakxONXRENFRFS1pEM1IxVkdkQ1JCN3lPeURLRTVMUUx3dkFRQl9MSmo1VG16bFRMcG5BNTF6azNBdG10ZVg2V2QyWktQeW82T2VrN2EtUVo0ZXhtSVFCdzM0cWNpeDhINlIxWXJYb19MNDhleG9WNk9DN3U2SHpQT19ZSjBaVTRlUENJWkcyWmtkQ1hpNmxUckVmYm0yZFl6X3U0TEVrTS04SDJVWUVvU1BJYkhEeGVrMUxSWTc0enRBa3ZhWVRIdWFXaldIWEREYlVOVHhIYTNpaDQ4U1VieWJmV2liRWlpNFFYM3pWOGZjTmZHLU1OVzEyd3BqRmxJcGsyOEF1Mzg3WXFzNWhIbTNKWVEwRFZ5dXE3ck9xQ0Y5ejlUdTFHVzFfYzY3dWdYZ0M2VlN5VHdWaTBKTFQ4eVZDRl9GQ0pBVDFPTVNuZFFVNXJGQ25jMms0TjBiZkN0UEw0OV9YdHd1V2U3ZWFNaWFEYkl3aFlJYkptb3RfVlBIVEJCRVhkMEFzbWlremt2dlBVYnprZ1lteC1VWnowWDRGQzlNTkFkMk9KT0w5UWctcXlxeGdRRkU3czhtUlJib0ZLQ3JJVVkxUnFDei16eU9NZ21BQndsOUdyN0NGUnhnVXFycDB5Rmg2QjNJVDBlYlhJOWl0aHl3Z3Z1a29UNWRqalRlWWt3WkxkNGRsTW9UNFltZlBLVkVyZ1o0TElJdGM0TkZMOGZPYjB1cGdTa2t0RVp6UEtsbDlJNjlNSEZnZGtsTWI4N2lJeGVQUW9RdExkRzNldFVBdmRWbVU0U0lad3dMZ05aN3NCMGZWQTE4SmJ2ZmNDc1ZOdGNoWDdyV3hnNFlVbTVHck9FZXRkRnRNWlMwU3NjaVV3dXhjSDhfdXFENE1KandDZ3pvVnpFVzZwenBwaHc2Qi1vZGY4bzNpcU9tYzI4czE0UWhYYVAwTXhWSGMwRDg3WUNUU0E1UkhwUjY0ZW01Z05halFCNkN1Q2F5WDhBWHFfVXEwT2VWRWtzSFNOcGZhcEhnc2VXdnU0bWNhbUZFSGI3dGE2Mk5pMHpxY3pxaEJ4cDNoYnQzdkttTHptLTdVWi1LMmZ0VGhQQU53N1VRYnZsR2xqcXZUTXlIMkZxd3hOaEgtWThYeWltTGhsenpkY2FiYk5TVVRzQmk5V0RVYnh5aUZ0aVdwLUJMNmthUDVJa3pCeHhsMmNaS2p5eURjbjR5SW9HXzZsYThRTjdtSmk2OTZpYjlXa3RMQ3pMcXlRb3B0SlMzbE0yM3B5YTRhZm0zaEplaDBiNnVGWlVNMzc1OVQ1SXI0dFlHMDFUcEQxLVloY3BtUGxKdHI2LVNLY2Q3WXA0eWFvaURtLVJRR1FiWXNaUVloOER5QXlYME9sd2tUUVdyd0lEakl2azFRTXNaOWVJU0UzQW9BclZXTHZ0czBYanYwZVZfZldCVnk3amlFV3JEelZwQ0owRlhlcG9Ed0lrb2R4ajE0MmVmdmowOG5xRW1ydkt2NlVRcl9CUXF3eHdKSTZLcUl6eEZjNUp5VlVBc0o2ekNmS1NYSkVqVGpGVE1OX2U0Wi1ZTm5KUGdIVy1ZUjhfNnFjZE8xMTAzYk11dUV4dG12WnE0UGExMXBySllyZ1FfTXFLLUpudTNZSzlqY2tVZUppTGYydHQ4bldYakZrVlRFblNJaER4dVFsck5xWi12MVZYbVNmWXZCUDFvclhJY0hqaHgtVkJncjFDNzhueHV6QWF2RmN0cDlLLUtMak5Mb2Q5dzA1anp3SVhhTVlUdXFjcHl4WGxqd0l4LS1LUzdueXFOb1VKVmxzeDlRVmFLOFFRNnZ1OTBWMmRFT05YZG5mMzB6RlczdFp5S28tZGFua1MwcnVMSnFfZkd5aXV4VzFlV2toNmtDRllBcmQyV3NUT1k4c1k3aWdWLVFZX19YTUl4T1BGWVRrX2JHWjVUN0RaN3ZabXpUSXBNOGNNUU96cDJueVk1ZFppUDlXdnFLbjZOSXZWZFE0SkwtZjRvMnMzTFNQNjFWc2VRQmlSeUo2U21NajlJOVZiUkhJT0lRZ1pDYnJib3BjQWJ0dFVLT3pIMTN5Y0F4Rm9Hb0lWUl83ZUN4WnBoeHplNG9jcjJrOVpSUzVSZ2NpbEpvYUhNV0w0ZVMzOFhCeEtnN1N6dmZlSE1CaVJpTjE0RURDTWFHQTR1dmxsQkZJckduS2pQYjhPWFRfakIxVXEyT2VnZ0QwVC1ieFBWSWJfaU1rNUg0MEp1Mk1GZTRsUFl6YUxRenZXbXpON1NjT0RHNEhpUzJGWFRUTlRaTUFNbWtPNU1kSTlSWDhrOURQUXlXc2xQck5ZUGJXajUxdVgxb256blRSTko3UHlwUUNzNTRYeUdKOGp1MFJhODRtSWExYVQ0aE00RGEwaE9Mb3dQRENLZkMwb3YwY3JUREdPTmNsWUphMWFJRUlOWHU4RlBvd3FMMDhDbXlRVG91ZjNvcDQyYTNKaWxHMHhYSEtEMGdDdENCYXFhdGktQUp5VjVDMGVQdXM3b2FoTk8wOXdZWTlCVk9BVGt1MDRBaUhyY0ZzUF9BNWRveTVXM2I4akExX2xsSXE4bExKZVhwQ1piOERDVnYtcjVKdzRnNXFtYlRZcUZQVVE3cTllT2RPeUxTSUFfczVEdHFndGNRZGFuc0M3aGFtUWV2b1pVVTZFRU4yWnU0bFE3NnVfbnNLYkViUXZiS0Mya2NMcjJxR2xhWVJJWFdDM21HN0QzbUpydzM2Q0toSGtWWG9LS0hSbGhkVUZKeFNjR0ltZmdhNjJ1dkxyX3AtcGhJRUZ1YTlSd1I0Ry03LWtaZk9BVGtjeVBSN0lVY1pqbzhMMnF0WHVLZmQwbDNsUkdqWjlWSm9iRFJtUE5LRDNnWGFsTjB1MXc5VVdKanowOUMyM1VzZENOOHJjSEtuVVVGcVpuc01oMUduZmFVY0VuekdIUENQY1FFd3VmcVN6UDRJM3BZVzBKYlVzRi1Za2g1dGcyYk4wXzNNZUFLOFF4UlhzUTdTcGVndXI3UXpReXRsSDhRSnp0dXVMTWduWUFENnZtbG16SmJPY0ZNR2l1bGNaZGJaQV9SY05idVQxTWJaMjZqNXZKeVo4WGlFN3lBX281TXdlM09EVjNzU0tlVV8yRUhZTXh6dkhNUzJrWDhrMG91S2g1ZW9aaW8xdE9rMjBKbEdPck1iY0QtZlI5M0QyS3BWMFgzeVBEODRVcHB6LTY5djJvUTVGNFo5Q3pmOU1zQ3RpZlFRTTJJSkNaUWNjRXhsSjhfbEtveHpTbjVaUFJDQ21DekdVNzNXRHhuTG5jTUFqLUUzd3g3bjdlVTNPaVRjZDBWTENfQ3o1ZURVa0RsZEFmTUVjcXVpWTFKRFdvRFNRS2FFVDFuUlNzX0g3WGJvN1ZpdEEyTUhlLTF0UmFsS3BDbWtCRE9OUVA0MXhkeVUtVEYtWjdJTk5BYk9tOFNMSGhuaS1hWkZGQWQ2a2toclJ3TXdGcFNQUDhQWV9XRV92QXlONFdySjRHS1hkVGpfSk5CaGVtRkRQdkdBR0lMNVMyRzYyZ1VzS3BsaWRNSFF2RXdSQU9uOHNXejlrTTZGMXNkdG9mcmxVUU5uNXNKalZHaHdIMVFtV3FHSE5vUXdhbUpIVG9UQ1RKa3NremFuWGlNdUticnA5T0hVYmZvUUpDVlVDSWI2bWYzYXRIWllIdGpXNUtZcjQ2ZkN3NjMtdXlpZnQ5bERKc0xWa2tZd2hEVEpDR3dXd1VKVjZkM3RmNEpEQUR0VDZhSFNBUkVtMUhQc0Z5M0xtY1pScEo2TFBteTFLdWFWSXZOb1NNNml5Y21QMkNYc0dELXNXMzFYQ3ltZW5aUGY0M0p2aGtkYko1YUNqQkdzZzhnaHV0UGJSaFA5Z0NqdXBVNU5PeS1ERlBlT29mZFVOVFBwY3BRMU1PZWY4M2hLaFh1bEs4cTlDSkJVSTlfTlhVOXhCdUNTTUhwaFI2UktjWW5oV1ZLd2pmb3lUYXBIQUdOVkI5aVhiQVB0VDlXN1BDLUxTTW9ob1lYX1dMdGk1RDhuRVJPSDN3ZVBGTlJsVFFxVHluVW44QW5Kd1lQaFhZNk56WDJYMkI5X2tPeVRVenBibjFXUnd5V1B4MlJPWUF4N0d0NjhDckJHUzZHV01CU2o4OE9rM2g3b3BXZFJMbG95OWV6SkhHaFdzWDNzU3hTQzBGZm1Pa0JaQl84YU5OSUZpZ1Z4ZmxjM2dwZmw2M0dja2RZZ2tRbVZ5cnpIeWNGLUtIWEoxUGRoYS1RSXc4TVRHZmo4a0Q0MUpvVmdQUG9DRkN6ZHQwNVF4MzZHN3dGVlhIMUdPTS15V3NYdFRNS1ZpVU9XVV9ZcWVkUFVsREd6RkVXOFJQVlZzOUM2TGN2Sm03RGR3SXhIN2pmM3VHWk1UVHFCck5yN3l4WlRrMExrR09IN29BMm9iRXQ5MnoybUpXSnpDbW1hMDhPZ3hZOEV0NUJZX0J4WkNuUjkyQ3FuWEM2QV90YXY4RUFCc21Od24yRjNPWU5xci0xQnNReGxUdF8tT0plQlM5S2lod3dZTWxCNlNOVFdFWTZsMFRlb1A5N1Y4TGNic0J0NDNLSHg0bS0wdVhpdG0zY0FGVmhpakRoUDAzeFVYV2NvdktKYnZZcHVlRzYtSU00WWNtV3dpQ0llOVdSblZseFVVWk84Y1VnckpSRnBvR0thX3IyeFRMXzRnUlNfWjVFSUJnZWRsVFlhV09ISTJXVUpGOEkwUC1WcWJlRXBvVW5MSVlIQlpKRTdpbDRMMzNTd0l6aEdaQ1F2dGpFZWFHLWJuRzhiYTZHWlE0ektxNlAyY3FHLWNNLXFpMW1Jak1SVG50QWJjRlpaNzBVNURkVE9xUHBCbW9adWs3T0N6czY1M1RBN3NCM3FOYVN5cmw2Rlp5Rng2NFhHblVQTjBZREhCWE5DYmgtd3BkR1pUcGp0U0RiUm5qRnZCbjBRb0JMZ1ZkY01oc0RDUVVDdzJYcFdJZVA2QTBNN296cVktNnVUaDd3THg2eHZlMDFkd3ZzdmFRUWpJN2dJOU9PWW12OXNETlpsUWNkNWM4ZjhIYVRyY0t0VXRYTkNhSEhiVmlEc1Q0ZVhic202SW9pNF9hVlRHU1UteVNIMlBtUXAwdWpyRmJuYVdSSDRtZzBIajNBZjIxNl85OVNjMEp5eGhVRElYZDdHaGFoZmlTX19lZlNXUXFjY0x5eUlxejdrZEpTemgxOWx2dTI4SnNTU1I0VVdBT1paSHVaNGpMZzZldmdxcFVhY2UwWGRYcG5kSnptY1N5QndhRkREQ2pGUlJ3a2pxalczeTFiLUJvc2dwZjdwY3BxY3d3Y0dNWmhGd3RNRk9wV3AwVUQ3dmV5bTFPZVk3NF9ySTlLVi02aUxma3ZOWXNkeDJuRUo3MFFWcTdoSGtQdkNEc25sRUcwV1RPSmR0MC1zZl9rQzlpTXlxOXhUZ3pRbXpqNEItcEtxOEtyT1VVNU9XUGphd0luX0FXM3d1Rjd6UDlGUEYzbmpiaWJXX0x1dk9JVklBUG93LWROcjJCLWYwNVR5bnlkRVVTZXdCOFN0XzdfX3YtemFxUEt3R3hlMGp0cw==)
                GOOGLE_SERVICE_INFO_PROD: Encrypted(Z0FBQUFBQmZyQVRvQzRkVGFJaEg1UjNtdWRISkxJQXRMUWxLZFByWFZSRnBHZ043c1JsSGhMZWg0Skl6UWNKWlIxLWVxVXpJaXR4MXFQaVgyVkhLXzg5WGJSZWFWY1ZTcnhUUEJEUEJWeFUyVHhFVDM4eXhha0NCbjdxTmFqMEdHdVBldzhURXRJV0pCZ0E3MzlsRGpIREFkTFRHYVN6U3BZZTR1MUZnaDlrY1BkanYtU3MyTUNKX2xIc0VoQ3BZUVdveDZ1Wlh3VmlFbDYtX3QyMlhMRGJ3UHRFTXVWQW56R3dNb0FZOVk2eTU1OENCZF9zQUp4eDc3OTd6WEpwSngyVFBCQ0RFbC1EcDlWdEVKazNFa1ZFRlN4Zk9lZ05PdGtLNW1PYkVJeG1IVHhzeTRWLUNfRkswM093ZWhIVnB5Yl9rNm1JU2hNVWRrX3JJZ1NmNFJqbkNJdEJGbENVNzhuR3ZJZjdNV0s0YnBLLXE3NWlTM1NSSTB3S0Z5NnlIbzFHQlFoYzMzRVlJM3pNdVl1am5aM0pjTWx2TEFFRVZNcDVrQ0tacFRvdWNmYk5QakdiVXBiUkt3Q25OaWhBM2dLVDcxa3BKbGh3VTJsanBsY0ZhTTNYZWRFak15bmlYLUFmb1RTdUtfbFNCWHVIb1BuNFQ3WUR0REVmZEpOYjZqazVoX0lDWFRQeENZQmRCVDVCZUhFNU55ckxUc1hXeXRyQ29DZ3NWV29OVmJoRU1DXzJDSjJNYWhNUXZ5NGh0NmpUSW9LTUlDZEJtNkFveHNNaFdaOVh1ZkRLbGRUa1JueXIteUo5STZrcGkyZHNReUhvb2xrVVJwWG1pTzZDZWc2MjFROTNEcU5LMEhYbHJJTUxKNHFSUDc0YjhIaGlQd24zekJxbXFPU2RiZU43WXhrb3JzdFRXcENheVRTVW5uTUVLaDI4aHViN19WbjRxTzBqWHZZMjRSZXpJbWxFMGc4RUNzbjkzZDZUZktGR0JweTVUQnVIVkZPYm94Y0lCc0xSNHM3VUo5VWNIcXlQbEtXNUpyRVN1bUcyV01CLUlFaE5Cb3hKT00wR0ZEaHROLWMtUnZfZnhJSTZhaGp4SnlCc1Rsb3dYeFhsT0lDMlBzMXI4dDVZb1dHMFk3eXh1MTItRDJEanhCdEpSVjFYd04wb09YRjZPcjUxX1FhQ0xaaGxYM3BGUl9NRE1aeUlRNHNpM0IxN3F5STZGUm9mVDV5YURmMjdISWZBRFlnOWx5ODM3MWxBYW9lbzAtMmRiR0N5VzctX3hjOEVrSFhtbExqMWtza20ybkpHaG5HaFcwV08zWFNzOWdaUTN0R19IamJjTVVrNTFxaTY3TElKZXNGV2txV0hiQm9RTW5IWVVYcDRxY2JhVlF0Yk51TWR5aWRYSmRBZ2NRMkV2QmFRcmwtSnBvS01FMEt5RjlCbU5qZEF3NmdXdmpzdTdUa3U3S1RBblBBSE5iMUdxX2d4NTM5VFItaHVVaExNWk1xTVBGd2QwelU2cXoyVFV1UGF3X0tOaTlwdGhzSjJ0UjBocGt5c2lnSzNadTZXZ0hNdVFXTWRmb2F6X285aHVKajFGZkpZX3dNOVdXLWlrRzdaZmtBRnRjeGFSdUZWNGxxNVdac3kxMWJtZlpuZmRmYi0wZXVZVFVRUUR0MDNELWJVa2xMdWRtOEQ0eTNxc19FenIxS1gtOHZ4SHFyd1BOUEduU1JvaXVKZklBUkFGb2FXdk9aNHhHTGlmLTAxNUNoQk5aSWRmUDRxckZ3X0QxM1hnYWhrcC1XYkZDM3B5WTJiUXE0VWxKZDBSZXVZUEw0bndYWmtfVDJEMGJ2ejVfcTZBZlpQSldicGlreWJHUGRYSi1SMGtGd3BhSWtTSFFUVVY0QUFCNnRQZUZJSE8yZF9zUFBPS0V1VkViQlNiQUlMVzEzOWhkQmQ0bmdFcjhSVXZIU2d0amxwQUZDdEZuX1dGak1ZZThpaWZ4Y2pWYWR4akFkWmdWVk1CdUxjbUxtWFhIdjFaS3JGeHhSdEVBaF9zakRIamtxODQ0THlNbmtSNkl0bVpoMU51ZGZGdmFYanljc09aVzhiSEtVMHNObUU4NFJnQ0JUb0FXbDkxU3hwR3ZWSjdHMk02ckhINzBseVU5OTB0c3VzZ195T0RMdlR2c0xnd2Z2dlNXeVlwdFVNbWFOSzdyUWd0WFpYZGJZOTRTUDhBbmtOU25KcXlWbkg3MW41X3dxdVdrV3FlLVRtcFF0RHdqUUU3SG54MFBzYjZiMGFYdGRSSmNFdnRsdUFwcTRKWFdiaXY1UE9jTUk3NG1rUDFNVXlPMUFac3FlcXpETmFTb2s4M3h5SGtsYVNfVDJhZXFiXzYtUEpWT0Z5WXpBVVRBelZYZmpUVnZENWg2X2tiLWNOaGNTMzlzTjB3QmZxUV9wblhzZFVIZTdSWHRlY21mV3NLNXBERURaaGdfY3BZXzFqbExjZ202U0pNZ0Q4cGZMZVlTaWJRX0RoTm9UamUtWGVUdWtpd3Q1NHhoZHRZR3ZadGFiTFp1MEJqbXFlR3hHdm01MzllR3NNU3ZHd3lnWElhYXBuMEY3eUFua0ZGd0tma2dXMldaWm1Xam50V1lqN1Z1bEt5U0tnTGdzLWM1bTF5elVWUVZrcWhhNGQ3ZWZZa29HUHpUeHoyU3hjaTA1dFpPdkVwcE5XQjVwZXE4TGpDZ3JWRkhHdnNLd3R0T3VqcGQ5S0hHSjNfMDB2M3RDdlNYTXkxNXVKdl96V2NpUFVnY19FY1h4cE1GRmdxY0RoOURBT1djUlhZRjJMUWNRZDZteXJoN1A4Nldyc2xROFloX1VBcVdPOGhvbjUxeXhIZXROcVV6Ylg0b0ttSzAxTHFoWGh0ZElkVjR1OGpscjdpSzlrY0NKMzhrd3V4c3hyVUw5WEtqWGM0ejhtTVRtaXl4UFQ4UDBOMkVub1ZvOUVqZ185ZnRVZGZFSm9Dbk1ZNVJPOU9xOUNZeVVSLWdia2cyeEUwcUxOY1BDc0lGMGxuUVhmUVFQMDBBcE9XT041a2JPTkdpY0hYel9rOVM5M0pNbzZOaXVJUTFoQ0t4TE9EZ0ROMWxoaFZtWXp1M0ZZLTBXeFgyZGdmdFpnSnVKY3F1ZVRQLUlySGh0WGhaUTA4M1RIa0MybTdWcjBPQzBfV3VjYVkydlY0bUNrTTkzdGYyMmpvcW5Mb2hfTmVlejg9)
            node: 12.19.0
        scripts:
            - npm install
            - npm run build     
            - npx cap sync
            - echo ${GOOGLE_SERVICE_INFO_PROD} | base64 --decode > $FCI_BUILD_DIR/ios/App/App/GoogleService-Info.plist
            - |
                # build iOS
                cd platforms/ios
                pod install
                keychain initialize
                app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
                keychain add-certificates
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios/App
                agvtool new-version -all $(($BUILD_NUMBER +1))  
                xcode-project use-profiles
                xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
            app_store_connect:
                apple_id: shane.earley10@gmail.com # <- put your Apple Id here
                password: Encrypted(Z0FBQUFBQmZyQjlpcnpnSFd5cjA5ZkIwSkNTN2ZCNXRXcnowOUJPc05kajBabUF0aU1BLUVMbE1tSjlhclhpcU9QVUlSaXdOZjg0Y2dlMTNaUHFuOGZfWVA3Q1dITzNsaXhxa2NtVDBVZG02ZGtYWHN2MzFNUkU9)
            email:
                recipients:
                    - shane.earley10@gmail.com
                notify:
                    success: true     # To not receive a notification when a build succeeds
                    failure: true     # To not receive a notification when a build fails    
    ionic-capacitor-android-app-prod:
        name: Ionic Capacitor Android App Prod
        environment:
            vars:
                GOOGLE_SERVICES_PROD: Encrypted(Z0FBQUFBQmZyQVJIdHN3bDZPT3hwQlZNQUVWWGVQNkNMUTRtbUNhUGJQSG5ZYjg0Y3JuMEdIaGJLQUN0LV9yeWlnWGZaMnUwY0ZLcmM0cDZsbDc0aFJTSmJoelJfOHBYVlhIODJQTFJBdVNWRzNXd3lZUzVNYkp1bC1aWldoNlg2ckZ0NHYwbVFPemE5VGZnMUk2eWdQUUpEeVFVcXRzbEwteU8xdHEyYjg5ZzhKZDB5cms3VVUwMVk1ZjlnQlFhUXctUElrWHlNZnJZVGhQaG02ajF6Q3VacmxvV0t5Sm1vd05nRFRsa18yZUJ4QkppMVRLM19GVm5BUThCRzQ4bnlEeFpQSEJVU2RVZDk2RUdIRl9aZXNXOTg4TUtyVzNGZFpraldZRUJZME5rd29KN243MzlaelBQbk4tcTN2RVMwUTJvaEx0aF95VW8zOVNTVFNBRm1taThSUjNDSFk5RkZ5N29PUTlPX0QxWXNFX2tfVFh5a0p6d0hFYkZGWk94X19rTGw2Y3dsaFhhMmEybFc3OGRTZ3JOUWt0bzludkJnRHItNFhaT3pNdlJZN1Via3R4UlI5SjNvck1uZmJWcXdtdU11M2swNGt5WEphSTBJQWlqQnRjTTRldGQyQ0tvdnBwdWJYOGpvQXllV2pFdE1vRTNPM2V1OXJvbC1IZkpmeFpKdWt0RDdLSTVmUGxwd1ZsUnVMaUpvS3VGUjY0Q0FROTdlXy1mbXZOY05MX3VQUzMzT1RqWl9TMzJ3a3M5ZGc2YnVlRlNPOU5pNnVzR0p1OFo5QjhuaXE0MnZveWFITEQwek5qUWhlWHY5MFBEME1qb0NDQkJpZTVsTkc5bS1kRmNkWDdiN0QzMU56S3RIWkowUXFMMFZuS2xlOU5KWERDRVp1ZXBPUUxLbV9jbnNXWGdGbTRBeVhiX0lsbWx1VU1GdzFsRVVpVWF6c1dVMTlMMEdQaHhnRlNuOWlFb0p0OWJ1Z2E3dTJtMXVGRzZucmdDU1RNSzRPdWR1NXpjbGJHaEtvVktwcjJiU3dsNzR1N3J6aTg2a014UFFyR1h1aE5DbHl0YjNnMFgyZEpWdGdqWWxuZWk1SXpFNE1mdWhDN3N0MGg5RklRQlRFam02SnlOTXlmWFkzVG5rYnFPaTFLSkNiYmJObXdRN3N2VGhtaHhCVm14LTQ1MHA4UmhVd2k1YnphRURFNmcwRDhydmJ3RXM2a2xqTmxBUEZiLWFleVNxUWJ4bTJOVDZzTjVwZWhnd3dsQ0JZV3hJeGg4S0FpamdZRXZOVmRuSzFVbWwxallidFJ0aUtVc2hfOGFidTdBb04tam1WNG9wMC1kUkxrMnA3S29NcWJRcGJIbFUxOEFBUE1QLWxORXFfU3Zib1JMVjZXUjFyRTdleDZneGFkM082VUI2eHlqWm9BSWx4cV9aNDVydDd4cFRtWHhlN29PM19UdUZsRlN0S05ILUtxOTdWOTBUR3N6UDZ2M1RxcUw0ejVWMzM2NnhvODdHazZ3ZkZmV25hOEhGUWNjQkZ0VWFlWXZ1QXVRR0xXMlRYWVdocWYwSXNwQUF1clhpem8wM2ZkUldqZklDQXJmN2lOS1M2YzJWdnBBUTdTMFZZME9IMWdENl9hb1NvZGdFWmtwM3pHeVVCakxoVmZ5TmJQT0NlMFJqRTNYMHJXWUo0ZEkwbm4wdkNrZWozSi1yb0w0RUxXRkVXMk96aUNwazEzYlZ5eHZOQ2o4cWdoQ3pZLURZRFQ2MmNQTDNGZjZLZ1NhRjR6NW1CV3FUVnV1Nmd3a01DdlFXX3FuN0xHX2VWU3hydHAyZEsyOXo1ZXBfd0N5SklEN1ZLNHl6NTBKeUhrLS1EOWNUWFdxRk9raVc2djlBbzJabk1CT3I2Y2dqMURjeEdXNWVTaWs0eFZhTmlkdXlxWjNvLTg0WjJwY2RPUVBxdkx4YXczNE5kZVdaZmZKeHJXTFpIeHc2ZEFkWVdkTEpfa290TGJWcTlsMUF0YjV2c2xGblU2dE10Y2hrUFZvRVRNMFBfejBTNTg0Y2pyTXJxUDBCM2ZVdXBVZ21vX2phZDhJQmF4d2UwMy12M3puRnZvUEplX1oyZGlVTDhRQ0hYWjZmSTgtUWFxSkZpYTVDdWpmQ1pJYkRUTzVGdm55dktZZjQ2TnB0Ulo5QWU4dE5PZnlEbjlLM01XdllPRW80ZkZvRUYtTDZjLTE3TVhhbUJzOENYRmg0Ri1hWVlIY2J5OEttZGZqLVFFeG9lUXYycEJoWlRfem9JbWRtTTlwdzl3YnN0cndnQnRJV1h3emZva09QbTlYU3JVVllyNTlWOUFHblh0ZU9kR2d4cGRBTDNWcnZob2FIbzRfaVdvb2pod0hKS0k4akhkMXZCVS0yblBjd3dsVXhhVFVMOWR1N3NlZzNldU80WXd4ZGlkd3BHNUZDZ1ZzSEZFUGNtZlNkZTVZbFVEVWlfYTZaRTVJemtTOERjQ3ZVNE5URElMNXZHM1U3dlhiRU01RkdWRURZMXFrQkZ2aExnUlRzaXFwTTdqSjJ3QU5mLTZOaG5VSHRFblp5WnA5d1ZlVmJKOEZLS1RNREk5Rm1Gb0ZQSENoeFdXT2s5ZG1vS0U1Q2xKc3VMUFZtWjU1cFY2bDJZRC1NUVdKaWw0VDFPaWloSTAzTU5fNExlMzcyREJZcWxiTHRNamQxS1V0b1otdHRqOVE1ZFZnc1l6eUxSNHo2WTJtRVlHZWZ1S2dwSC1vOFYwbGp0TUptblpaTUFMeWlLdlJ1X3lUUkNCU3dWMHFMNGhVT0ltU0FnWEFvekp6ZVF4d0cwaDEwZlFGRDRBV0NJS3lnOXFKYVBXMm5oNl9EdVVRMmhPU3k0Vk1uZnhsVWQ5TFZ6MjVyY0RuUXpsb21uMlhQUFNqcmN0T0NfQ2c4a3NiMjhGSTBPM2tQTzQtb2N5VmQ5SzRVUzVtVjVWdTVRMmM2a2JldThiSXptenJDSWtta01EbUtZSzFxTEhyazZmNTUwZlRiZW1KeHI4TDZiRlpNY2ZrT0tFUXpzcG9MM0o3NnZrMjJTSXQ1VTM1VXFZRDQwMHFSSlhBNUxneWhabTMwSmd5b05Ba2lwRnVNQmV3UzdhWDZLZDlhN3hBT0Q4bFRiMkVuZW1CYnN4dWstODJKM0FaLVpUbW80Q05UR0s3MHU4cnJZNzJRSVh2anZ1blpicV9FcmlINzcydUNXaldhUjluV3Vjbncwemh3OXVkclFfZ09qa1BrOEdSVzhKSGR0bFdXVGtnV1I2dnBCQzA2eVk0cTNFTkMzNC1FMnhaVjI2MzhvR2I1dThBcG4ydDJJNWVhMlNKaTNXcWNvc3NyYi1WbmRNYTh3SUswZEpqOEp2bUZUaEdDOVFpaEdXc0RCaDZhdnpyUWNkZFpCb1lZb2R1amxBY2paQzd0U0E1anRUMEo1SFRUa2ZDd1hVOHhCd0xyRXFNWFVIMzk0bFpnbDh3dS1pS2VLeDk3X0o5NThISU43ZmVxVlZVbUZXY3pBd3lWbGxjelpJTTd3YjAzaTduTFJ1SkV1VmlrTXB0VUthSzhzeTlJSHBDcjh0YjEyNW9PSnptYUdnWW5nRmJHOWlhbUxEdDE0am1xakx4dFFCekg5N0dld1hjaU5feFdhNVRhdmo0YnotbG1SbVp3VW4yOWxaM2RHT083d0lGekJGeXptVHBjalhTRUIwWE5KU3YzZHdyQVRfeFBDdnFaRnhGN2wzRWk0T2ZSN2N2RGlpYUUtSkc2MHZMQjd1VUhIbHM0RDhPYUozVjlZcmxhRVRDVXZRTGcwcUhkX3piYlNHdEdoNEZMNjZsdV9fcEN4UUNsWVY0U0t5cG9tTExEUTBOUEpBWnVmaUFVSzZBc1ZhSHZ4ZzZUWHZhcGVGcW1BV01jUXdYb2RRM3NER1FtNTNSZVAwVFEtSGpzVXQyR1VkSEFmMGpvTkFNNlA0N05OVUxySjJNVWQ5bnNWT3MzZzNGb1BZLU1qTV8xbUd1V0VBYVQySEg2c3B2OHA1VEV0ZkdqcGxQbmcyNWUxQy15Ny1CQ241Mm5KMGIzVHJ3amVRZmlPZlBRcmpJNkRXZUdlMVNmYWlSbV9XY0pseVRaODBXdE1XNmlTbXo0ZlVDRTN1ODlzdG5LRzRFRnM0RmMtWW81NU5RN2lnb3QxeklRU0ZkN0FkTV9mRjVMTmNHRTRMU2dXbi1lNFIyVWNHdGEzdVNELS1JaGZ6YlU1NXR3T3l6bmZCeEM2YmpRV18yNVRaajNOVXQ5QUY1a0VxbmFUeTN5eG0xYURNVWZ5UWJidkVydFh4bkJpcVBxOUFOS1JnYi1iVkhhSFFCdUtqMEROU1ZqYXBqOGh1WWk5V2NsbWRaWVpPQmhGVGNMR3Q4S3Q4T2NfRG5ULUtMR3FRMTNsd3RkMHh5cGphcjgtRXBxMW5jSjNnRjl5X3FPdGM2bWQxZUlKUDFQSWo4Mlp4ODh4MnEtNzZfZW55Z0hrOGU0b3BnMURKNllaUzdaU1lmSTB0dW15YmVnbVdaRnRuT2poazZZbkVtR3dkMEJKRDRILS01VVl1QWxUal9YaUIyaDV6YzVsc2k1MXRRemJUNEc5YUc1QnlxeXhGcFZYSzFZcjNsNF9Xb1A1QjA2SGRyMXp0Z256ZjRObUZFNWZqbEtsMHdzaVZjMlhObjBMRHljd1BFbFJIYnFmSlJrbFl6bDVCMUNYTWJGUEFmUjNIUUJGOHFMWXd2cWFXOWhKMFhlVFk9)
            node: 12.19.0
        scripts:
            - npm install
            - npm run build     
            - npx cap sync
            - echo ${GOOGLE_SERVICES_PROD} | base64 --decode > $FCI_BUILD_DIR/android/app/google-services.json 
            - |
                # build Android
                cd android
                ./gradlew assembleDebug
        artifacts:
            - android/app/build/outputs/**/*.apk